{"version":3,"file":"cart.js","mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA,mB","sources":["webpack://07-js-cart/./src/cart.js"],"sourcesContent":["\r\n\r\n// //Grabs the price of every current item in the cart[] data structure, adds them together, and stuffs the result into the HTML.\r\n// function updateTotal() {\r\n//     const total = cart.reduce((accumulator, item) => {\r\n//         return accumulator + item.price;\r\n//     }, 0);\r\n\r\n//     const totalHTML = `Total: $${total.toFixed(2)}`;\r\n\r\n//     document.querySelector('.cart-total').innerHTML = totalHTML;\r\n// }\r\n\r\n// //Adds event listeners for the inventory, which is only the Add to Cart button at the moment. This function\r\n// //creates the a cart item when the button is clicked and calls renderCart() to show it on the page.\r\n// function addInventoryListeners(inventory) {\r\n//     const addToCartEl = document.querySelector('.inventory');\r\n\r\n//     addToCartEl.addEventListener('click', (inventoryEvent) => {\r\n//         if (inventoryEvent.target.classList.contains('add-cat')) {\r\n//             const catName = inventoryEvent.target.dataset.name;\r\n//             const cat = inventory[catName];\r\n//             console.log(cat);\r\n\r\n//             cart.push({\r\n//                 cat: cat.name,\r\n//                 price: cat.price,\r\n//                 quantity: 1,\r\n//                 img: cat.img,\r\n//             });\r\n//             renderCart(cart);\r\n//         }\r\n//     });\r\n// }\r\n\r\n// //Adds event listeners for the cart, which include remove item, increase quantity, decrease quantity,\r\n// //and checkout.\r\n// function addCartListeners(cart, inventory) {\r\n//     const cartEl = document.querySelector('.cart-view');\r\n\r\n//     cartEl.addEventListener('click', (cartEvent) => {\r\n//         //If the Delete button is pressed, remove the item from the data structure and render the page\r\n//         if (cartEvent.target.classList.contains('remove-item')) {\r\n//             const index = cartEvent.target.dataset.index;\r\n//             cart.splice(index, 1);\r\n//             renderCart(cart);\r\n//         }\r\n//         //If the Checkout button is pressed, remove all items from the cart and render the page.\r\n//         if (cartEvent.target.classList.contains('checkout')) {\r\n//             cart.length = 0;\r\n//             renderCart(cart);\r\n//         }\r\n//         //If the Add 1 button is pressed, increment the quantity by 1, add the Inventory price (which never changes) to the\r\n//         //cart price, and render the page.\r\n//         if (cartEvent.target.classList.contains('increase-quantity')) {\r\n//             const index = cartEvent.target.dataset.index;\r\n//             increaseQuantity(index, cart);\r\n//             renderCart(cart);\r\n//         }\r\n//         //If the Remove 1 button is pressed, decrement the quantity by 1, subtract the Inventory price (which never changes) from\r\n//         //the cart price, and render the page\r\n//         if (cartEvent.target.classList.contains('decrease-quantity')) {\r\n//             const index = cartEvent.target.dataset.index;\r\n\r\n//             if (cart[index].quantity == 0) {\r\n//                 return;\r\n//             } else {\r\n//                 const catName = cartEvent.target.dataset.name;\r\n//                 const cat = inventory[catName];\r\n\r\n//                 cart[index].quantity--;\r\n//                 cart[index].price = cart[index].price - cat.price;\r\n//                 renderCart(cart);\r\n//             }\r\n//         }\r\n//     })\r\n// };\r\n\r\n// function increasePrice(index, cart) {\r\n//     const price = cart[index].price * quantity;\r\n//     return price\r\n// }\r\n\r\n// function showCart() {\r\n\r\n// };\r\n\r\n// function hideCart() {\r\n\r\n// };\r\n\r\n// // addCartListeners(cart, inventory);\r\n// // addInventoryListeners(inventory);\r\n\r\n// export { inventory };\r\n// export { cart };"],"names":[],"sourceRoot":""}